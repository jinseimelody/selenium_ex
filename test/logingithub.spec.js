// Generated by Selenium IDE
const config = require('../config.test.json');
const assert = require('assert');
const {
    Builder,
    By,
    Key,
    until
} = require('selenium-webdriver');
const addContext = require('mochawesome/addContext');
const { login, sleep, findElement, ensureOutputDir, takeScreenShot } = require('../helper');

describe("Login Page - Normal Cases", function () {
    this.timeout(30000);
    let driver;

    before(function () {
        ensureOutputDir();
    });

    beforeEach(async function () {
        driver = await new Builder().forBrowser('chrome').build();
        await login(driver);
    })

    afterEach(async function () {
        await driver.quit();
    })

    it ("Login and redirect to selenium_ex repository", async function() {
        addContext(this, "Expected result: redirect to https://github.com/jinseimelody/selenium_ex");

        {
            // take daskboard screen shot
            const fileName = await takeScreenShot(driver);
            addContext(this, "Capture: dashboard");
            addContext(this, "../images" + "/" + fileName);
        }

        {
            const element = await findElement(driver, By.linkText("jinseimelody/selenium_ex"));
            const actions = driver.actions({async: true});
            await actions.move({origin:element}).perform();
            // mouse over on link text
            const fileName = await takeScreenShot(driver);
            addContext(this, "Capture: move to link text");
            addContext(this, "../images" + "/" + fileName);
            element.click();
        }

        await sleep(1000);
        {
            // take repository screen shot
            const fileName = await takeScreenShot(driver);
            addContext(this, "Capture: selenium repository");
            addContext(this, "../images" + "/" + fileName);
        }

        // confirm test result
        const currentUrl = await driver.getCurrentUrl();
        console.log("currentUrl : " + currentUrl);
        assert.equal(currentUrl, "https://github.com/jinseimelody/selenium_ex", "ERROR: Wrong url");
    });
})