// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const { sleep, takeScreenShot, findElement } = require('../helper')
const config = require('config.json')('./config/login_config.json')
const assert = require('assert')

describe('login', function () {
    this.timeout(120000)
    let driver
    let vars
    beforeEach(async function () {
        driver = await new Builder().forBrowser('chrome').build()
        vars = {}
    })
    afterEach(async function () {
        await driver.quit();
    })
    it('login', async function () {
        await driver.get(config.url)
        await driver.manage().window().setRect({ width: 1052, height: 808 })
        await takeScreenShot('./images', driver)
        const userName = await driver.findElement(By.css("input[type='text'][placeholder='Username']"))
        userName.sendKeys(config.input.userName)

        const password = await driver.findElement(By.css("input[type='password'][placeholder='Password']"))
        password.sendKeys(config.input.password);

        await takeScreenShot('./images', driver)
        const loginBtn = await driver.findElement(By.xpath("//button[contains(.,\'Login\')]"))
        loginBtn.click();

        await sleep(20000)
        await takeScreenShot('./images', driver)

        // check output
        const outputType = config.output.type
        switch (outputType) {
            case "element": {
                const [locator, value] = config.output.selector
                await findElement(driver, By[locator](value), 1000)
            } break;
        }
    })
})
